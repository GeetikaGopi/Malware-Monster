# -*- coding: utf-8 -*-
"""finalcode_16bce2208.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1j5N-dK-pIUk7jYA6s6DftZGMOzvSv_cO
"""

#Import Required Headers
import numpy as np
!pip install nashpy
import nashpy as nash
import pandas as pd
import operator
import pandas, sys
import pandas as pd
import matplotlib.pyplot as plt

import array as arr
from google.colab import drive
drive.mount('/content/drive')
from pandas import DataFrame, read_csv
import io
from google.colab import files

# Read Data set and generate pay off matrix
df=pd.read_csv("drive/My Drive/finaldataset.csv")
g=df.iloc[:,0]
cm1=df.iloc[:,1]
cm2=df.iloc[:,2]
ci1=df.iloc[:,3]
ci2=df.iloc[:,4]
l=df.iloc[:,5]
a=df.iloc[:,6]
b=df.iloc[:,7]
a0=df.iloc[:,8]
a1=df.iloc[:,9]
a2=df.iloc[:,10]
a3=df.iloc[:,11]
x1=a0
a1=a1
x2=a2
a2=-ci1
x3=a3 
a3=-ci2
y1=-cm1+g 
b1=-l 
y2=(-cm1+(1-a)*g)
data = np.array([y1])
b2=(-ci1-(1-a)*l)
data2 = np.array([b2])
y3=(-cm1+(1-b)*g)
data1 = np.array([y2])
b3=(-ci2-(1-b)*l)
data3 = np.array([b3])
z1=-cm2+g
c1=-l
z2=(-cm2+(1-a)*g)
c2=(-ci1-(1-a)*l)
z3=(-cm2+(1-b)*g)
c3=(-ci2-(1-b)*l)
df1=pd.DataFrame(dict(NoAttack0=(x1),NoDefense0=(a1)))
df2=pd.DataFrame(dict(NoAttack00=(x2),LowDefense0=(a2)))
df3=pd.DataFrame(dict(NoAttack000=(x3),HighDefense0=(a3)))
df4=pd.DataFrame(dict(LowAttack1=(y1),NoDefense1=(b1)))
df5=pd.DataFrame(dict(LowAttack11=(y2),LowDefense1=(b2)))
df6=pd.DataFrame(dict(LowAttack111=(y3),HighDefense1=(b3)))
df7=pd.DataFrame(dict(HighAttack2=(z1),NoDefense2=(c1)))
df8=pd.DataFrame(dict(HighAttack22=(z2),LowDefense2=(c2)))
df9=pd.DataFrame(dict(HighAttack22=(z3),HighDefense2=(c3)))
dff1=pd.DataFrame(dict(NoAttack0=(x1),NoDefense0=(a1),NoAttack00=(x2),LowDefense0=(a2),NoAttack000=(x3),HighDefense0=(a3),LowAttack1=(y1),NoDefense1=(b1),LowAttack11=(y2),LowDefense1=(b2),LowAttack111=(y3),HighDefense1=(b3),HighAttack2=(z1),NoDefense2=(c1),HighAttack22=(z2),LowDefense2=(c2),HighAttack222=(z3),HighDefense2=(c3)))
dff1.to_csv('payoffmatrix.csv')
print(dff1)
files.download('payoffmatrix.csv')

#Seperate pay of matrix for attacker and defender
dff2=pd.DataFrame(dict(NoAttack0=(x1),NoAttack00=(x2),NoAttack000=(x3),LowAttack1=(y1),LowAttack11=(y2),LowAttack111=(y3),HighAttack2=(z1),HighAttack22=(z2),HighAttack222=(z3)))
dff2.to_csv('Attacker.csv')
files.download('Attacker.csv')
dff3=pd.DataFrame(dict(NoDefense0=(a1),LowDefense0=(a2),HighDefense0=(a3),NoDefense1=(b1),LowDefense1=(b2),HighDefense1=(b3),NoDefense2=(c1),LowDefense2=(c2),HighDefense2=(c3)))
dff3.to_csv('Defender.csv')
files.download('Defender.csv')

#Calculate Nash Equilibrium ( max min function)
from tabulate import tabulate
aa=dff2.max(axis=1)
aaa=dff2.idxmax(axis=1)
bb=dff2.min(axis=1)
bbb=dff2.idxmax(axis=1)
cc=dff3.max(axis=1)
ccc=dff3.idxmax(axis=1)
dd=dff3.min(axis=1)
ddd= dff3.idxmax(axis=1)
list=(aa)
list1=(dd)
list2=(bb)
list3=(cc)
df10=pd.DataFrame(dict(Attackermaxvalue=(aa),Attackermax=(aaa),Defenderminvalue=(dd),Defendermin=(ddd),Attackerminvalue=(bb),Attackermin=(bbb),defendermaxvalue=(cc),defendermax=(ccc)))
df10.to_csv('Attacker and defender max min.csv')
print(df10)
files.download('Attacker and defender max min.csv')

#Check if Nash Equilibrium exists (saddle point)
if __name__ == "__main__": 
     print("---------------------------------- Payoff matrix  -----------------------------------------------")
     print(dff1)
     print("---------------------------------- Saddlepoint values  -----------------------------------------------")
     print(tabulate([[[df10]]],tablefmt="grid"))
   
     for k in list:
          for l in list1:
                        if  all(list==list1):
                              print(("saddle"))
                        else:
                             print("No saddle")
     for i in list2:
          for j in list3:
                        if  all(list2==list3):
                              print(("saddle"))
                        else:
                             print("No saddle")

# Calculation of Mixed Nash Equilibrium for Attacker Defender
print('-----------------------------------------------------------------------------') 
print("-------------  Mixed Strategy Nash Equilibrium--------------------------------")
print('----------------------------------------------------------------------------- ')
xp=((a*ci1*l-ci1*l+l+l*ci2*(1-b)*(a*ci1*l-ci1*l+ci1+l))/((a*ci1*l-ci1*l+ci1+l)*(ci2+l*ci2*(1-b))))
yp=((l*a*ci1-l*ci1+l+l*ci2*(l*a*ci1-l*ci1+ci1+l)-l*b*ci2*(l*a*ci1-l*ci1+ci1+l))/(ci2*(l*a*ci1-l*ci1+ci1+l)*(1+l-l*b)))
zp=1-xp-yp
NoAttack=xp*a1+yp*(b1)+zp*(c1)
print("NoAttack=\n",NoAttack)
LowAttack=xp*a2+yp*b2+zp*c2
#print("LowAttack=\n",LowAttack)
HighAttack=xp*a3+yp*b3+zp*c3
print("HighAttack=\n",HighAttack)
dff4=pd.DataFrame(dict(NoAttackMSNE=(NoAttack),LowAttackMSNE=(LowAttack),HighAttackMSNE=(HighAttack)))
dff4.to_csv('AttackerMSNE.csv')
files.download('AttackerMSNE.csv')
print(dff4)
y=1
xx=((g*(y*cm2*a-cm2*y*b+cm2*b-cm2-y*cm1*a+cm1*y*b-cm1*b+cm1))/((-g*b+g-1)*(cm1-cm2)))
yy=((-xx*cm2-cm2*g*xx*b+cm2*g*xx+cm2*g*b-cm2*g+xx*cm1+cm1*g*xx*b-cm1*g*xx-cm1*g*b+cm1*g)/(g*(a-b)*(cm1-cm2)))
zz=1-xx-yy
NoDefense=xx*x1+yy*y1+zz*z1
print("\nNoDefense=\n",NoDefense)
LowDefense=xx*x2+yy*y2+zz*z2
print("\nlowDefense=\n",LowDefense)
HighDefense=xx*x3+yy*y3+zz*z3
print("\nHighDefense=\n",HighDefense)
dff5=pd.DataFrame(dict(NoDefenseMSNE=(NoDefense),LowDefense0=(a2),HighDefenseMSNE=(HighDefense)))
dff5.to_csv('DefenderMSNE.csv')
files.download('DefenderMSNE.csv')
print(dff5)

#Calculation of MAX Mixed Nash Equilibrium values for Attacker and Defender
print("Attacker and defender max values")
msne1= dff4.max(axis=1)
msne2 =dff4.idxmax(axis=1)
msne3= dff5.max(axis=1)
msne4= dff5.idxmax(axis=1)
dff11=pd.DataFrame(dict(AttackerMSNEMaxvalues=(msne1),AttackerMSNE=(msne2)))
dff12=pd.DataFrame(dict(DefenderMSNEMaxvalues=(msne3),DefenderMSNE=(msne4)))
dff11.to_csv('AttackerMSNEMaxvalues.csv')
files.download('AttackerMSNEMaxvalues.csv')
dff12.to_csv('DefenderMSNEMaxvalues.csv')
files.download('DefenderMSNEMaxvalues.csv')
print(tabulate([[[dff11],[dff12]]],tablefmt="grid"))
sum1=dff2.sum(axis = 0) 
sum2=dff3.sum(axis=0)
print(sum1,sum2)
print("---------------------------------------------------------------------------------------")

#Graph of MSNE and MAX MSNE values
print("-------------  Graph of Mixed Strategy Nash Equilibrium and MSNE Max Values --------------------------------")
attackm = pandas.read_csv('drive/My Drive/AttackerMSNE.csv', index_col=0)
plot = attackm.plot(title='MSNE', marker='.', markersize=6)
plot.set_xlabel("Payoffmatrix")
plot.set_ylabel("AttackerMSNE")
defendm = pandas.read_csv('drive/My Drive/DefenderMSNE.csv',index_col=0)
plot = defendm.plot(title='MSNE ', marker='.', markersize=6)
plot.set_xlabel("Payoffmatrix")
plot.set_ylabel("DefenderMSNE")
attackmax = pandas.read_csv('drive/My Drive/AttackerMSNEMaxvalues.csv', index_col=0)
plot = attackmax.plot(title='MSNE Max Values', marker='.', markersize=6)
plot.set_xlabel("Payoffmatrix values")
plot.set_ylabel("AttackerMSNE")
defensemax = pandas.read_csv('drive/My Drive/DefenderMSNEMaxvalues.csv', index_col=0)
plot = defensemax.plot(title='MSNE Max values', marker='.', markersize=6)
plot.set_xlabel("Payoffmatrix values")
plot.set_ylabel("DefenderMSNE")
print("----------------------------------------------------------------------------------------------------")

df10=pd.DataFrame(dict(Attackermaxvalue=(aa),Attackermax=(aaa),Defenderminvalue=(dd),Defendermin=(ddd),Attackerminvalue=(bb),Attackermin=(bbb),defendermaxvalue=(cc),defendermax=(ccc)))
print(df10)

print("Attacker payoff vs Attacker MSNE ")


dff17=pd.DataFrame(dict(NoAttack0=(x1),NoAttackMSNE=(NoAttack)))
dff17.to_csv('Nop.csv')
files.download('Nop.csv')
m1 = pandas.read_csv('drive/My Drive/Nop.csv', index_col=0)
plot1 = m1.plot(title='NoAttack vs NoAttack MSNE', marker='.', markersize=8)
plot1.set_xlabel("AttackerMSNE values")
plot1.set_ylabel("payoff matrix of no attack")

dff18=pd.DataFrame(dict(LowAttack1=(y1),LowAttackMSNE=(LowAttack)))
dff18.to_csv('Lop.csv')
files.download('Lop.csv')
m2 = pandas.read_csv('drive/My Drive/Lop.csv', index_col=0)
plot2 = m2.plot(title='LowAttack1 vs LowAttack1 MSNE 1', marker='.', markersize=8)
plot2.set_xlabel("AttackerMSNE values")
plot2.set_ylabel("payoff matrix of Low  attack1")

dff19=pd.DataFrame(dict(LowAttack11=(y2),LowAttackMSNE=(LowAttack),))
dff19.to_csv('Lop1.csv')
files.download('Lop1.csv')
m3 = pandas.read_csv('drive/My Drive/Lop1.csv', index_col=0)
plot3 = m3.plot(title='LowAttack2 vs LowAttack2 MSNE 2', marker='.', markersize=8)
plot3.set_xlabel("AttackerMSNE values")
plot3.set_ylabel("payoff matrix of Low  attack2")

dff20=pd.DataFrame(dict(LowAttack111=(y3),LowAttackMSNE=(LowAttack)))
dff20.to_csv('Lop2.csv')
files.download('Lop2.csv')
m4= pandas.read_csv('drive/My Drive/Lop2.csv', index_col=0)
plot4 = m4.plot(title='LowAttack3 vs LowAttack MSNE 3', marker='.', markersize=8)
plot4.set_xlabel("AttackerMSNE values")
plot4.set_ylabel("payoff matrix of Low  attack 3")

print("HighAttack vs HighAttack MSNE")

dff118=pd.DataFrame(dict(HighAttack2=(z1),HighAttackMSNE=(HighAttack)))
dff118.to_csv('Lopp.csv')
files.download('Lopp.csv')
mm2 = pandas.read_csv('drive/My Drive/Lopp.csv', index_col=0)
plot5 = mm2.plot(title='HighAttack1 vs HighAttack MSNE 1 ', marker='.', markersize=8)
plot5.set_xlabel("AttackerMSNE values")
plot5.set_ylabel("payoff matrix of High  attack1")

dff119=pd.DataFrame(dict(HighAttack22=(z2),HighAttackMSNE=(HighAttack)))
dff119.to_csv('Lopp1.csv')
files.download('Lopp1.csv')
mm3 = pandas.read_csv('drive/My Drive/Lopp1.csv', index_col=0)
plot6 = mm3.plot(title='HighAttack2 vs HighAttack MSNE 2 ', marker='.', markersize=8)
plot6.set_xlabel("AttackerMSNE values")
plot6.set_ylabel("payoff matrix of High  attack2")

dff220=pd.DataFrame(dict(HighAttack222=(z3),HighAttackMSNE=(HighAttack)))
dff220.to_csv('Lopp2.csv')
files.download('Lopp2.csv')
mm4= pandas.read_csv('drive/My Drive/Lopp2.csv', index_col=0)
plot7 = mm4.plot(title='HighAttack3 vs HighAttack MSNE 3', marker='.', markersize=8)
plot7.set_xlabel("AttackerMSNE values")
plot7.set_ylabel("payoff matrix of High  attack 3")





print("Defender payoff vs Defender MSNE ")

print("NoDefense vs NoDefense MSNE")
dff21=pd.DataFrame(dict(NoDefense0=(a1),NoDefenseMSNE=(NoDefense)))
dff21.to_csv('Dop.csv')
files.download('Dop.csv')
m5= pandas.read_csv('drive/My Drive/Dop.csv', index_col=0)
plot8 = m5.plot(title='NoDefense1 vs NoDefense MSNE1 ', marker='.', markersize=8)
plot8.set_xlabel("DefenderMSNE values")
plot8.set_ylabel("payoff matrix of No defense 1")


dff22=pd.DataFrame(dict(NoDefense1=(b1),NoDefenseMSNE=(NoDefense)))
dff22.to_csv('Dop1.csv')
files.download('Dop1.csv')
m6= pandas.read_csv('drive/My Drive/Dop1.csv', index_col=0)
plot9 = m6.plot(title='NoDefense 2 vs NoDefense MSNE2', marker='.', markersize=8)
plot9.set_xlabel("DefenderMSNE values")
plot9.set_ylabel("payoff matrix of No defense 2")

dff23=pd.DataFrame(dict(NoDefense2=(c1),NoDefenseMSNE=(NoDefense)))
dff23.to_csv('Dop2.csv')
files.download('Dop2.csv')
m7= pandas.read_csv('drive/My Drive/Dop2.csv', index_col=0)
plot10 = m7.plot(title='NoDefense 3 vs NoDefense MSNE 3', marker='.', markersize=8)
plot10.set_xlabel("DefenderMSNE values")
plot10.set_ylabel("payoff matrix of No defense 3")

print("Low Defense vs Low Defense MSNE")

dff24=pd.DataFrame(dict(LowDefense0=(a2),LowAttackMSNE=(LowAttack)))
dff24.to_csv('Dop3.csv')
files.download('Dop3.csv')
m8= pandas.read_csv('drive/My Drive/Dop3.csv', index_col=0)
plot11 = m8.plot(title='Low Defense 1 vs Low Defense MSNE 1', marker='.', markersize=8)
plot11.set_xlabel("DefenderMSNE values")
plot11.set_ylabel("payoff matrix of Low defense 1")


dff25=pd.DataFrame(dict(LowDefense1=(b2),LowAttackMSNE=(LowAttack)))
dff25.to_csv('Dop4.csv')
files.download('Dop4.csv')
m9= pandas.read_csv('drive/My Drive/Dop4.csv', index_col=0)
plot12 = m9.plot(title='Low Defense 2 vs Low Defense MSNE 2', marker='.', markersize=8)
plot12.set_xlabel("DefenderMSNE values")
plot12.set_ylabel("payoff matrix of Low defense 3")



dff26=pd.DataFrame(dict(LowDefense2=(c2),LowAttackMSNE=(LowAttack)))
dff26.to_csv('Dop5.csv')
files.download('Dop5.csv')
m10= pandas.read_csv('drive/My Drive/Dop5.csv', index_col=0)
plot13 = m10.plot(title='Low Defense 3 vs Low Defense MSNE 3', marker='.', markersize=8)
plot13.set_xlabel("DefenderMSNE values")
plot13.set_ylabel("payoff matrix of Low defense 3")


print("High Defense vs High Defense MSNE")

dff27=pd.DataFrame(dict(HighDefense0=(a3),HighDefenseMSNE=(HighDefense)))
dff27.to_csv('Dop6.csv')
files.download('Dop6.csv')
m11= pandas.read_csv('drive/My Drive/Dop6.csv', index_col=0)
plot14 = m11.plot(title='High Defense 1  vs High Defense MSNE 1', marker='.', markersize=8)
plot14.set_xlabel("DefenderMSNE values")
plot14.set_ylabel("payoff matrix of High defense 1")

dff28=pd.DataFrame(dict(HighDefense1=(b3),HighDefenseMSNE=(HighDefense)))
dff28.to_csv('Dop7.csv')
files.download('Dop7.csv')
m12= pandas.read_csv('drive/My Drive/Dop7.csv', index_col=0)
plot15 = m12.plot(title='High Defense 2 vs High Defense MSNE 2', marker='.', markersize=8)
plot15.set_xlabel("DefenderMSNE values")
plot15.set_ylabel("payoff matrix of High defense 1")




dff29=pd.DataFrame(dict(HighDefense2=(c3),HighDefenseMSNE=(HighDefense)))
dff29.to_csv('Dop8.csv')
files.download('Dop8.csv')
m13= pandas.read_csv('drive/My Drive/Dop8.csv', index_col=0)
plot16 = m13.plot(title='High Defense 3 vs High Defense MSNE 3', marker='.', markersize=8)
plot16.set_xlabel("DefenderMSNE values")
plot16.set_ylabel("payoff matrix of High defense 3")